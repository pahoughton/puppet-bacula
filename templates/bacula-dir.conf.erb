# bacula-dir.conf.erb - 2014-02-15 16:38
#
# Copyright (c) 2014 Paul Houghton <paul4hough@gmail.com>
#
# DO NOT EDIT - Managed by Puppet
#
# Bacula Director Master Configuration
#   for <%= @hostname %>-dir

# Define the name of this director so other clients can
# connect to it and work with our system
Director {
  Name = "<%= @hostname -%>-dir"
  Password = "<%= @dirpass %>"
  Query File = "/etc/bacula/query.sql"
  Working Directory = "<%= @workdir %>"
  PID Directory = "/var/run/bacula"
  Maximum Concurrent Jobs = <%= @max_jobs %>
  Messages = "MsgDaemon"
}

# Generic catalog service
Catalog {
  Name = <%= @catalogname %>;
  dbname = "bacula"; dbuser = "bacula"; dbpassword = ""
}

# MESSAGES
# Configure how the directory will log and/or send messages.
Messages {
  Name = "<%= @jobmesgs %>"
  Mail Command = "/usr/lib/bacula/bsmtp -h localhost -f bacula@<%= @hostname -%> -s \"Bacula %t %e (for %c)\" %r"
  Operator Command = "/usr/lib/bacula/bsmtp -h localhost -f bacula@<%= @hostname -%> -s \"Bacula Intervention Required (for %c)\" %r"
  Mail = <%= @mail_to -%> = all, !skipped
  Operator = <%= @mail_to -%> = mount
  Console = all, !skipped, !saved
  # WARNING! the following will create a file that you must cycle from
  #          time to time as it will grow indefinitely. However, it will
  #          also keep all your messages if they scroll off the console.
  Append = "/var/log/bacula/<%= @hostname -%>-dir.log" = all, !skipped
  Catalog = all
}

# These are messages directly from the various daemons themselves.
Messages {
  Name = "MsgDaemon"
  Mail Command = "/usr/lib/bacula/bsmtp -h localhost -f bacula@<%= @hostname -%> -s \"Bacula Notice (from Director %d)\" %r"
  Mail = <%= @mail_to -%> = all, !skipped
  Console = all, !skipped, !saved
  Append = "/var/log/bacula/<%= @hostname -%>-dir.log" = all, !skipped
}

# SCHEDULE
# These two are the default backup schedule; don't change them
Schedule {
  Name = "WeeklyCycle"
  Run = Level=Full First Sun at 23:05
  Run = Level=Differential Second-Fifth Sun at 23:05
  Run = Level=Incremental Mon-Sat at 23:05
}

Schedule {
  Name = "WeeklyCycleAfterBackup"
  Run = Level=Full Mon-Sun at 23:10
}

# Finally, bring in all the additional pieces of configuration from the
# different servers for which this Director was configured to manage
@|"sh -c 'for f in <%= @configdir %>/dir.d/*.conf ; do echo @${f} ; done'"
